grammar dk.sdu.mdsd.ArduinoDSL with org.eclipse.xtext.common.Terminals

generate arduinoDSL "http://www.sdu.dk/mdsd/ArduinoDSL"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Program: program+= (Rule | Node)*;

Rule:
    ('when' | 'once') Condition '{' body=RuleBody '}'
;


Condition:
    left=Exp BOOLEAN_OPERATOR right=Exp;

Exp returns Expression:
    Factor ({Exp.left=current} operator=ExpWeakOp right=Factor)*
;

Factor returns Expression:
    Value ({Factor.left=current} operator=ExpStrongOp right=Value)*
;

ExpWeakOp:
    {Plus} '+' | {Minus} '-'    
;

ExpStrongOp:
    {Mult} '*' | {Div} '/'
;

terminal BOOLEAN_OPERATOR:
    '<' | '>' | '>=' | '<=' | '==' | '!='
;

Value:
    {Value} NUMBER | Attribute | Delta | {Value} STATE
;

Attribute:
    name=[Node] component=ID
;

Delta:
    Attribute 'delta'
;

NUMBER returns ecore::EFloat: INT ('.' INT)?;

terminal STATE:
    'on' | 'off'
;

RuleBody:
    assignment+= Assignment+
;

Assignment:
    attribute=Attribute "=" value=Exp
;

Node:
    name=ID '{' components+=Component+ '}'
;

Component:
    name=ID properties=ComponentBody
;

ComponentBody:
    io=IO type=TYPE 'pin' pin=NUMBER map=Map? rate=Rate? smoothing=Smoothing?
;

terminal IO:
    'input' | 'output'
;

terminal TYPE:
    'analog' | 'digital'
;

Map:
    'map' Range '=>' Range
;

Range:
    NUMBER ':' NUMBER
;

Rate:
    'rate' NUMBER
;

Smoothing:
    'smoothing' NUMBER
;